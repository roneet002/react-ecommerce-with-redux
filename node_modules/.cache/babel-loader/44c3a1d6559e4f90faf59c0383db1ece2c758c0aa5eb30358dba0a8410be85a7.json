{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst STATUSES = Object.freeze({\n  IDLE: 'idle',\n  ERROR: 'error',\n  LOADING: 'loading'\n});\nconst initialState = {\n  data: [],\n  status: STATUSES.IDLE\n};\nconst ProductSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n\n    //     setProducts(state, action){\n    //         state.data = action.payload\n    //     },\n    //     setStatus(state, action){\n    //         state.status = action.payload\n    //     }  \n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, (state, action) => {\n      state.status = STATUSES.LOADING;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = STATUSES.IDLE;\n    });\n  }\n});\nexport const {\n  setProducts\n} = ProductSlice.actions;\nexport default ProductSlice.reducer;\n\n// Thunk Data fetching\n\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const res = await fetch('https://fakestoreapi.com/products');\n  const data = await res.json();\n  return data;\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","STATUSES","Object","freeze","IDLE","ERROR","LOADING","initialState","data","status","ProductSlice","name","reducers","extraReducers","builder","addCase","fetchProducts","pending","state","action","fulfilled","payload","setProducts","actions","reducer","res","fetch","json"],"sources":["/home/amitkumar/Downloads/e-comproject/src/store/ProductSlice.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\n\nconst STATUSES = Object.freeze({\n    IDLE:'idle',\n    ERROR:'error',\n    LOADING:'loading'\n})\n\nconst initialState = {\ndata:[],\nstatus: STATUSES.IDLE\n\n}\n\nconst ProductSlice  = createSlice({\nname:'products',\ninitialState,\nreducers:{\n\n//     setProducts(state, action){\n//         state.data = action.payload\n//     },\n//     setStatus(state, action){\n//         state.status = action.payload\n//     }  \n},\nextraReducers: (builder)=>{\n\nbuilder.addCase(fetchProducts.pending, (state, action)=>{\nstate.status = STATUSES.LOADING\n}).addCase(fetchProducts.fulfilled, (state, action)=>{\nstate.data = action.payload;\nstate.status = STATUSES.IDLE\n\n})\n\n}\n\n})\n\nexport const {setProducts} = ProductSlice.actions\n\nexport default ProductSlice.reducer \n\n\n// Thunk Data fetching\n\n\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async() => {\nconst res = await fetch('https://fakestoreapi.com/products')\nconst data = await res.json();\nreturn data\n})\n"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;AAE9D,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC3BC,IAAI,EAAC,MAAM;EACXC,KAAK,EAAC,OAAO;EACbC,OAAO,EAAC;AACZ,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACrBC,IAAI,EAAC,EAAE;EACPC,MAAM,EAAER,QAAQ,CAACG;AAEjB,CAAC;AAED,MAAMM,YAAY,GAAIV,WAAW,CAAC;EAClCW,IAAI,EAAC,UAAU;EACfJ,YAAY;EACZK,QAAQ,EAAC;;IAET;IACA;IACA;IACA;IACA;IACA;EAAA,CACC;EACDC,aAAa,EAAGC,OAAO,IAAG;IAE1BA,OAAO,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MACxDD,KAAK,CAACT,MAAM,GAAGR,QAAQ,CAACK,OAAO;IAC/B,CAAC,CAAC,CAACS,OAAO,CAACC,aAAa,CAACI,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAG;MACrDD,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACT,MAAM,GAAGR,QAAQ,CAACG,IAAI;IAE5B,CAAC,CAAC;EAEF;AAEA,CAAC,CAAC;AAEF,OAAO,MAAM;EAACkB;AAAW,CAAC,GAAGZ,YAAY,CAACa,OAAO;AAEjD,eAAeb,YAAY,CAACc,OAAO;;AAGnC;;AAGA,OAAO,MAAMR,aAAa,GAAGjB,gBAAgB,CAAC,wBAAwB,EAAE,YAAW;EACnF,MAAM0B,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;EAC5D,MAAMlB,IAAI,GAAG,MAAMiB,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7B,OAAOnB,IAAI;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}